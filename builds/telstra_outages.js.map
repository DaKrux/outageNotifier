{"version":3,"sources":["../src/telstra_outages.js"],"names":["checkTelstra","validateStatus","status","address","url","data","axios","get","timeout","connectionType","Object","values","serviceStatus","filter","outage","name"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,YAAf,GAA8B;AAEnC,QAAMC,cAAc,GAAGC,MAAM,IAAIA,MAAM,KAAK,GAA5C;;AACA,QAAMC,OAAO,GAAG,MAAM,oBAAU,yBAAV,CAAtB;AACA,QAAMC,GAAG,GAAI,iDAAgDD,OAAQ,EAArE;AAEA,QAAM;AAACE,IAAAA;AAAD,MAAS,MAAMC,eAAMC,GAAN,CAAUH,GAAV,EAAe;AAACI,IAAAA,OAAO,EAAE,KAAV;AAAiBP,IAAAA;AAAjB,GAAf,CAArB;AAEA,QAAMQ,cAAc,GAAG,OAAvB;AAEA,SAAOC,MAAM,CAACC,MAAP,CAAcN,IAAI,CAACO,aAAnB,EACJC,MADI,CACIC,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBN,cAD/B,CAAP;AAGD","sourcesContent":["import axios from 'axios'\nimport {getSecret} from './lib/ssm'\n\nexport async function checkTelstra() {\n\n  const validateStatus = status => status === 200\n  const address = await getSecret('/outage/telstra/address')\n  const url = `https://outages.telstra.com/api/fixed?address=${address}`\n\n  const {data} = await axios.get(url, {timeout: 60000, validateStatus})\n\n  const connectionType = 'Cable'\n\n  return Object.values(data.serviceStatus)\n    .filter((outage) => outage.name === connectionType)\n\n}\n\n"],"file":"telstra_outages.js"}